{"version":3,"sources":["Const/logoDimensions.js","Const/index.js","Atom/Atom.js","Atlantide/LineMaker.js","Atlantide/PatternMaker.js","views/PatternView/PatternView.js","App.js","index.js"],"names":["magicRatio","value","Math","tan","PI","logoWidth","logoHeight","spacing","phi","sqrt","quasiPeriodBehaviour","n","floor","periodBehaviour","Atom","props","logoPoints","Const","join","fill","stroke","strokeWidth","d","LineMaker","numberOfAtoms","set","atoms","className","classes","id","y","x","Array","from","e","i","atomProps","phase","scaleX","scaleY","push","evenOddVerticalFlip","quasiPeriodicHorizontalFlip","mirrorVer","mirrorHor","style","href","key","PatternMaker","vertical","horizontal","lineProps","chaotic","PatternView","viewBox","withCouples","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebefd074.chunk.js","sourcesContent":["//brand costants\nexport function magicRatio(value) {\n    // diviso 2 per ottenere metà base tirangolo * tan(54°)\n    return value/2*Math.tan(54*Math.PI/180)\n}\n//logo dimensions\nexport const logoWidth = 1000\nexport const logoHeight = magicRatio(logoWidth)\nexport const spacing = logoWidth/10","export const phi = (1 + Math.sqrt(5)) / 2\nexport function quasiPeriodBehaviour(n) {\n    return (2-(Math.floor((n+2)* phi)-Math.floor((n+1)*phi)))\n  }\nexport function periodBehaviour(n) {\n  return (n%2!==0)\n}\nexport * from \"./logoDimensions\";","import React from 'react';\nimport * as Const from '../Const'\nimport './Atom.scss'\nfunction Atom(props)  {\n  var logoPoints = [\n    Const.spacing*3, Const.logoHeight - Const.magicRatio(Const.spacing*2),\n    Const.spacing*4, Const.logoHeight,\n    Const.spacing*6, Const.logoHeight,\n    Const.spacing*4, Const.logoHeight - Const.magicRatio(Const.spacing*4),\n    Const.spacing*5, Const.logoHeight - Const.magicRatio(Const.spacing*6),\n    Const.spacing*8, Const.logoHeight,\n    Const.logoWidth, Const.logoHeight,\n    Const.spacing*5, 0,\n    0, Const.logoHeight,\n    Const.spacing*2, Const.logoHeight\n  ].join(' ')\n    return(<path\n            fill=\"none\"\n            stroke=\"hsl(45.6deg, 100%, 50%)\"\n            strokeWidth={Const.spacing/10*2}\n            d={'M' + logoPoints + 'z'}\n          />)\n}\nexport default Atom;","import React from 'react';\nimport * as Const from '../Const'\nimport './LineMaker.scss'\nfunction LineMaker(props) {\n  var numberOfAtoms = props.set.atoms, spacing = props.set.spacing * Const.spacing\n\n    return <svg className={props.classes} id=\"#Line\" y={props.y} x={props.x}>\n              {Array.from(Array(numberOfAtoms), (e, i) => {let classes = [],scaleX = 1, scaleY = 1, atomProps, phase\n\n                //EVENODD PERIODIC BEHAVIOUR\n                if(Const.periodBehaviour(i)) {\n                  classes.push('frequentAtom')\n                  //FLIP VERTICAL\n                  if (props.set.evenOddVerticalFlip)\n                    scaleY = -1\n                  //PHASING\n                  if (props.set.phase === 'periodic')\n                    phase = {y: -(Const.logoWidth+spacing)/2}\n                }\n\n                //QUASIPERIODIC BEHAVIOUR\n                if(Const.quasiPeriodBehaviour(i)) {\n                  classes.push('quasirareAtom')\n                  //FLIP HORIZONTAL\n                  if (props.set.quasiPeriodicHorizontalFlip)\n                    scaleX = -1\n                  //PHASING\n                  if (props.set.phase === 'quasiperiodic')\n                    phase = {y: -(Const.logoWidth+spacing)/2}\n                }\n\n                //rare behaviour [quasiperiod and evenodd period matching]\n                if(Const.quasiPeriodBehaviour(i) && Const.periodBehaviour(i)) {\n                  classes.push('rareAtom')\n                }\n\n                //constant behaviour [for the whole line]\n                if (props.mirrorVer)\n                  scaleY =  -scaleY\n                if (props.mirrorHor)\n                  scaleX =  -scaleX\n                \n                if (scaleX === -1 || scaleY === -1) \n                atomProps = {style: {'--transf' : 'scale(' + scaleX + ',' + scaleY + ')'}}\n\n                let x = (props.set.evenOddVerticalFlip) ? (Const.logoWidth + spacing) * i : (Const.logoWidth + spacing) * i\n                //Atom at position i get printed\n                return(<use className={classes.join(' ')} x={x} href=\"#Atom\" {...phase} {...atomProps} key={i}/>)\n              })}\n            </svg>\n}\nexport default LineMaker","import React from 'react';\nimport * as Const from '../Const'\nimport LineMaker from './LineMaker'\nimport './PatternMaker.scss'\nfunction PatternMaker(props) {\n  let vertical = props.set.vertical, horizontal = props.set.horizontal, spacing = vertical.spacing * Const.spacing\n  return (<>\n    {Array.from(Array(vertical.atoms), (e, i) => { let classes = [], mirrorHor, mirrorVer, lineProps, phase\n      \n      //EVENODD PERIODIC BEHAVIOUR\n      if(Const.periodBehaviour(i)) {\n        classes.push('frequentLine')\n\n        //FLIP VERTICAL\n        if (vertical.evenOddVerticalFlip)\n          mirrorVer = true\n        //PHASING\n        if (vertical.phase === 'periodic')\n          phase = {x: -(Const.logoWidth+spacing)/2}\n      }\n\n      //QUASIPERIODIC BEHAVIOUR\n      if(Const.quasiPeriodBehaviour(i)) {\n        classes.push('quasirareLine')\n\n        //FLIP HORIZONTAL\n        if (vertical.quasiPeriodicHorizontalFlip)\n          mirrorHor = true\n        //PHASING\n        if (vertical.phase === 'quasiperiodic')\n          phase = {x: -(Const.logoWidth+spacing)/2}\n      }\n\n      //rare behaviour [quasiperiod and evenodd period matching]\n      if(Const.quasiPeriodBehaviour(i) && Const.periodBehaviour(i)) {\n        classes.push('rareLine')\n      }\n\n      //constant behaviour [for the whole line]\n      if (!props.set.chaotic)\n        lineProps = {mirrorVer: mirrorVer, mirrorHor: mirrorHor}\n      else\n        lineProps = {mirrorHor: mirrorVer, mirrorVer: mirrorHor}\n      //Line at position i get printed\n      return(<LineMaker {...phase} y={(Const.logoHeight + spacing) * i} set={horizontal} classes={classes.join(' ')} {...lineProps} key={i}/>)\n    })}\n  </>)\n}\nexport default PatternMaker","import React from 'react';\nimport './PatternView.scss';\nimport * as Const from '../../Const'\nimport PatternMaker from '../../Atlantide/PatternMaker'\nfunction PatternView(props)  {\n  let patternSettings = {\n    horizontal: {\n      spacing: 5,\n      atoms: 100,\n      quasiPeriodicHorizontalFlip: true,\n      evenOddVerticalFlip: true,\n      phase: false\n    },\n    vertical: {\n      spacing: 5,\n      atoms: 40,\n      quasiPeriodicHorizontalFlip: true,\n      evenOddVerticalFlip: true,\n      phase: 'periodic'\n    },\n    withCouples: false,\n    chaotic: false\n  }\n  return(\n    <svg viewBox={\"0 0 \" + Const.logoWidth + \" \" + Const.logoHeight} className=\"svgViewer\">\n      <PatternMaker set={patternSettings} />\n    </svg>\n  )\n}\nexport default PatternView;","import './App.css';\nimport * as Const from './Const'\nimport Atom from './Atom/Atom'\nimport PatternView from './views/PatternView/PatternView';\nfunction App() {\n  return (\n    <>\n      <svg className=\"symbol\">\n        <symbol id=\"Atom\" viewBox={\"0 0 \" + Const.logoWidth + \" \" + Const.logoHeight}>\n            <Atom />\n        </symbol>\n      </svg>\n      <PatternView />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}